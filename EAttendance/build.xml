<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." name="EAttendance">
	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"/>
	<target name="verifyVulnerabilityThreshold">
		<xmltask source="./../demo.testfire.net.xml">
			<call path="XmlReport/Summary/Hosts/Host/TotalHighSeverityIssues">
				<param name="TotalHighSeverityIssues" path="text()" default="n/a"/>
				<actions>
					<echo>TotalHighSeverityIssues = @{TotalHighSeverityIssues}</echo>
				</actions>
			</call>
			<call path="XmlReport/Summary/Hosts/Host/TotalMediumSeverityIssues">
				<param name="TotalMediumSeverityIssues" path="text()" default="n/a"/>
				<actions>
					<echo>TotalMediumSeverityIssues = @{TotalMediumSeverityIssues}</echo>
				</actions>
			</call>
			<copy path="XmlReport/Summary/Hosts/Host/TotalHighSeverityIssues/text()" property="TotalHighSeverityIssues"/>
		</xmltask>
	
		<!-- returns the same results as Java's compareTo() method: -->
		<!-- -1 if arg1 < arg2, 0 if arg1 = arg2, 1 if arg1 > arg2 -->
		<scriptdef language="javascript" name="compare">
		    <attribute name="arg1" />
		    <attribute name="arg2" />
		    <attribute name="result" />
		    <![CDATA[
		    var val1 = parseInt(attributes.get("arg1"));
		    var val2 = parseInt(attributes.get("arg2"));
		    var result = (val1 > val2 ? 1 : (val1 < val2 ? -1 : 0));
		    project.setProperty(attributes.get("result"), result);
		    ]]>
		</scriptdef>
		
		<local name="compareResult" />
		<compare arg1="${TotalHighSeverityIssues}" arg2="${VulnerabilityThreshold}" result="compareResult" />
		<fail message="TotalHighSeverityIssues: ${TotalHighSeverityIssues} is greater than the Threshold Vulnerability Count: ${VulnerabilityThreshold} and hence stopping the pipeline!">
		    <condition>
		        <equals arg1="${compareResult}" arg2="1" />
		    </condition>
		</fail>			
	</target>
	
	
		
	<path id="compile.classpath">
		<fileset dir="WebContent/WEB-INF/lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${tomcatLibrary}">
			<include name="*.jar"/>
		</fileset>
	</path>
		
	<target name="init">
		<mkdir dir="build/classes"/>
	</target>

	<pathconvert property="classpathProp" refid="tomcat.classpath"/>

	<target name="compile" depends="init" >
		<echo message= "Classpath is ${classpathProp}"/>
		<javac destdir="build/classes" debug="true" includeantruntime="false" srcdir="src">
			<classpath refid="compile.classpath"/>
		</javac>
	</target>
	
	<target name="buildWar" depends="compile">
		<war destfile="EAttendance.war" webxml="WebContent/WEB-INF/web.xml">
			<fileset dir="WebContent"/>
			<classes dir="build/classes"/>
		</war>
	</target>
	
	<target name="clean">
		<delete dir="build" />
	</target>
	
</project>